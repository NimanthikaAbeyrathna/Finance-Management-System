import {Component, inject} from '@angular/core';
import {BreakpointObserver, Breakpoints} from "@angular/cdk/layout";
import {map, Observable, shareReplay} from "rxjs";
import {environment} from "../../../environments/environment.development";
import {HttpClient} from "@angular/common/http";
import {User} from "../../models/user";


@Component({
  selector: 'app-signin',
  templateUrl: './signin.component.html',
  styleUrls: ['./signin.component.scss']
})
export class SigninComponent {

  private breakpointObserver = inject(BreakpointObserver);


  username:string = '';
  password: string = '';
  confirmPassword: string = '';
  email: string = '';



  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)
    .pipe(
      map(result => result.matches),
      shareReplay());

  constructor(private http: HttpClient) {


  }

  onFormSubmit(event: any) {
    event.preventDefault();

    if (!this.username) {
      alert('Username is required.');
      return;
    }
    if (!/^[A-Z a-z ]+$/.test(this.username)) {
      alert('please give correct user name');
      return;
    }
    if (!this.password) {
      alert('Password is required.');
      return;
    }
    if (this.password.length < 5 ){
      alert('Password must be at least 5 characters long.');
      return;
    }
    if (!/^(?=.*[A-Za-z])(?=.*\d).{5,}$/.test(this.password)) {
      alert('Password must have at least one alphabetic character (uppercase or lowercase), at least one digit (0-9), and a minimum length of 5 characters.');
      return;
    }
    if (!/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(this.email)) {
      alert('Please enter a correct email address.');
      return;
    }
    if (this.password !== this.confirmPassword) {
      alert('password and confirm password didnt match');
      return;
    }
    const user = {
      username: this.username,
      password: this.password,
      email :this.email
    };

    this.http.post<User>(`${environment.apiUrl}/user`, user)
      .subscribe((response: any) => {
          // Success handling here
          alert(`Please log in to continue, and kindly remember this one-time autogenerated ID for future interactions.your user id is :${response}`);

        },
        (error) => {
          console.log(error);
        });

  }
}
